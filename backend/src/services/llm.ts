// –ê–≤—Ç–æ—Ä: –°—Ç–∞—Å –ß–∞—à–∏–Ω @chastnik
/* eslint-disable no-console */
import axios from 'axios';

export interface LlmCategorySummary {
  category: string;
  avgScore: number;
}

export interface LlmResponseItem {
  category: string;
  question: string;
  score?: number;
  comment?: string | null;
}

export async function generateEmployeeRecommendations(params: {
  employeeFullName: string;
  cycleName: string;
  overallAverage: number;
  categories: LlmCategorySummary[];
  responses: LlmResponseItem[];
}): Promise<string> {
  const baseUrl = process.env.LLM_BASE_URL;
  const token = process.env.LLM_PROXY_TOKEN;
  const model = process.env.LLM_MODEL || 'qwen2.5:14b';

  if (!baseUrl || !token) {
    throw new Error('LLM –Ω–µ —Å–∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω (LLM_BASE_URL/LLM_PROXY_TOKEN)');
  }

  // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è qwen3:14b
  const systemPrompt = [
    '–¢—ã HR-—ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –ø–µ—Ä—Å–æ–Ω–∞–ª–∞.',
    '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã 360-–≥—Ä–∞–¥—É—Å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ –∏ –¥–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.',
    '–£—á–∏—Ç—ã–≤–∞–π —á–∏—Å–ª–æ–≤—ã–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤.',
    '',
    '–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ (—Å—Ç—Ä–æ–≥–æ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤):',
    '',
    '## –ö—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑',
    '2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ —Ç–µ–∫—É—â–µ–º —É—Ä–æ–≤–Ω–µ —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.',
    '',
    '## –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã',
    '- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ —Å –≤—ã—Å–æ–∫–∏–º–∏ –æ—Ü–µ–Ω–∫–∞–º–∏',
    '- –ù–∞ —á—Ç–æ –æ–ø–∏—Ä–∞—Ç—å—Å—è –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏',
    '',
    '## –ó–æ–Ω—ã —Ä–æ—Å—Ç–∞',
    '- –û–±–ª–∞—Å—Ç–∏ —Å –Ω–∏–∑–∫–∏–º–∏ –æ—Ü–µ–Ω–∫–∞–º–∏',
    '- –ß—Ç–æ —Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–≤–æ–æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è',
    '',
    '## –ü–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è (4-6 –Ω–µ–¥–µ–ª—å)',
    '- [ ] –ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –∏–∑–º–µ—Ä–∏–º—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º',
    '- [ ] –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥ —Å –¥–µ–¥–ª–∞–π–Ω–æ–º',
    '- [ ] –ò —Ç–∞–∫ –¥–∞–ª–µ–µ (5-8 –ø—É–Ω–∫—Ç–æ–≤)',
  ].join('\n');

  // –°–æ–∫—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤
  const compactCategories = params.categories.map(c => `${c.category}: ${c.avgScore.toFixed(1)}`).join(', ');
  const sampleComments = params.responses
    .filter(r => r.comment && r.comment.trim().length > 10)
    .slice(0, 15)
    .map(r => `${r.category}: "${r.comment}"`)
    .join('\n');

  const userContent = [
    `–°–æ—Ç—Ä—É–¥–Ω–∏–∫: ${params.employeeFullName}`,
    `–¶–∏–∫–ª: ${params.cycleName}`,
    `–û–±—â–∏–π –±–∞–ª–ª: ${params.overallAverage.toFixed(1)}/5.0`,
    '',
    `–û—Ü–µ–Ω–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º: ${compactCategories}`,
    '',
    '–ö–ª—é—á–µ–≤—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:',
    sampleComments || '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç',
  ].join('\n');

  const url = `${baseUrl.replace(/\/$/, '')}/api/chat`;

  const payload = {
    model,
    messages: [
      { role: 'system', content: systemPrompt },
      { role: 'user', content: userContent },
    ],
    stream: false,
  };

  const headers = {
    'Content-Type': 'application/json',
    'X-PROXY-AUTH': token,
  };

  try {
    console.log(`ü§ñ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è ${params.employeeFullName} —á–µ—Ä–µ–∑ ${model}`);
    console.log(`üîó URL: ${url}`);
    console.log(`üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º X-PROXY-AUTH: ${token.substring(0, 8)}...`);
    
    const response = await axios.post(url, payload, { 
      headers, 
      timeout: 90000,
      validateStatus: (status) => status < 500, // –Ω–µ –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É –Ω–∞ 4xx
      maxRedirects: 5,
      decompress: true,
    });

    // –í—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    console.log(`üìä HTTP Status: ${response.status}`);
    console.log(`üìã Response Headers:`, JSON.stringify(response.headers, null, 2));
    console.log(`üìÑ Response Data:`, JSON.stringify(response.data, null, 2));

    if (response.status === 403) {
      const errorDetails = response.data?.error || response.data;
      throw new Error(`–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω –∫ –º–æ–¥–µ–ª–∏ qwen3:14b. –î–µ—Ç–∞–ª–∏: ${JSON.stringify(errorDetails)}`);
    }

    if (response.status === 401) {
      const errorDetails = response.data?.error || response.data;
      throw new Error(`–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –î–µ—Ç–∞–ª–∏: ${JSON.stringify(errorDetails)}`);
    }

    if (response.status >= 400) {
      const errorMsg = response.data?.error?.message || response.data?.message || JSON.stringify(response.data) || `HTTP ${response.status}`;
      throw new Error(`LLM API error: ${errorMsg}`);
    }

    let content = response.data?.message?.content?.trim();
    
    if (!content) {
      console.error('–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç LLM:', JSON.stringify(response.data, null, 2));
      throw new Error('LLM –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç');
    }

    // –£–¥–∞–ª—è–µ–º –±–ª–æ–∫–∏ <think></think> –∏–∑ –æ—Ç–≤–µ—Ç–∞
    content = content.replace(/<think>[\s\S]*?<\/think>/gi, '').trim();
    
    // –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
    content = content.replace(/\n{3,}/g, '\n\n');

    console.log(`‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã (${content.length} —Å–∏–º–≤–æ–ª–æ–≤)`);
    return content;

  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      throw new Error('–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ LLM API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ LLM_BASE_URL');
    }
    
    if (error.code === 'ETIMEDOUT') {
      throw new Error('–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ –∫ LLM API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
    }

    throw error;
  }
}

export default { generateEmployeeRecommendations };


