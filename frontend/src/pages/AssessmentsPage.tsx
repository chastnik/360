// –ê–≤—Ç–æ—Ä: –°—Ç–∞—Å –ß–∞—à–∏–Ω @chastnik
import React, { useState, useEffect } from 'react';
import { Link, useLocation } from 'react-router-dom';
// Layout —É–±—Ä–∞–Ω - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç—Å—è –≤ Layout –Ω–∞ —É—Ä–æ–≤–Ω–µ —Ä–æ—É—Ç–∏–Ω–≥–∞
import api from '../services/api';

interface Assessment {
  id: number;
  participant_id: number;
  participant_name: string;
  cycle_name: string;
  cycle_description: string;
  end_date: string;
  status: 'pending' | 'in_progress' | 'completed';
  completed_at?: string;
}

export const AssessmentsPage: React.FC = () => {
  const location = useLocation();
  const [assessments, setAssessments] = useState<Assessment[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [successMessage, setSuccessMessage] = useState<string | null>(null);

  useEffect(() => {
    loadAssessments();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if (location.state?.message) {
      setSuccessMessage(location.state.message);
      // –û—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏, —á—Ç–æ–±—ã –æ–Ω–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–ª–æ—Å—å –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –≤—Ö–æ–¥–µ
      window.history.replaceState({}, document.title);
    }
  }, [location]);

  const loadAssessments = async () => {
    try {
      setLoading(true);
      const response = await api.get('/assessments/available');
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç API
      const assessmentsData = response.data?.success ? response.data.data : response.data;
      setAssessments(Array.isArray(assessmentsData) ? assessmentsData : []);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ–ø—Ä–æ—Å–æ–≤:', error);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–ø—Ä–æ—Å—ã');
    } finally {
      setLoading(false);
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'pending': return 'bg-yellow-100 text-yellow-800';
      case 'in_progress': return 'bg-blue-100 text-blue-800';
      case 'completed': return 'bg-green-100 text-green-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const getStatusText = (status: string) => {
    switch (status) {
      case 'pending': return '–û–∂–∏–¥–∞–µ—Ç';
      case 'in_progress': return '–í –ø—Ä–æ—Ü–µ—Å—Å–µ';
      case 'completed': return '–ó–∞–≤–µ—Ä—à–µ–Ω';
      default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
  };

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'pending': return '‚è≥';
      case 'in_progress': return 'üîÑ';
      case 'completed': return '‚úÖ';
      default: return '‚ùì';
    }
  };

  const isExpired = (endDate: string) => {
    return new Date(endDate) < new Date();
  };

  const getDaysRemaining = (endDate: string) => {
    const end = new Date(endDate);
    const now = new Date();
    const diffTime = end.getTime() - now.getTime();
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    return diffDays;
  };

  if (loading) {
    return (
      <div className="flex justify-center items-center h-64">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600"></div>
      </div>
    );
  }

  return (
    <div className="max-w-4xl mx-auto">
        <div className="flex justify-between items-center mb-6">
          <h1 className="text-2xl font-bold text-gray-900 dark:text-white">
            –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ä–æ—Å—ã
          </h1>
          <button
            onClick={loadAssessments}
            className="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg font-medium transition-colors"
          >
            –û–±–Ω–æ–≤–∏—Ç—å
          </button>
        </div>

        {successMessage && (
          <div className="bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded mb-6">
            {successMessage}
          </div>
        )}

        {error && (
          <div className="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-6">
            {error}
          </div>
        )}

        {assessments.length === 0 ? (
          <div className="bg-gray-50 dark:bg-gray-800 rounded-lg p-8 text-center">
            <div className="text-gray-500 dark:text-gray-400 mb-4">
              <svg className="w-12 h-12 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
              </svg>
            </div>
            <h3 className="text-lg font-medium text-gray-900 dark:text-white mb-2">
              –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤
            </h3>
            <p className="text-gray-600 dark:text-gray-300">
              –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–ª—è –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è.
            </p>
          </div>
        ) : (
          <div className="space-y-4">
            {assessments.map(assessment => {
              const daysRemaining = getDaysRemaining(assessment.end_date);
              const expired = isExpired(assessment.end_date);
              
              return (
                <div
                  key={assessment.id}
                  className={`bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6 ${
                    expired ? 'opacity-60' : ''
                  }`}
                >
                  <div className="flex justify-between items-start">
                    <div className="flex-1">
                      <div className="flex items-center gap-3 mb-2">
                        <span className="text-2xl">{getStatusIcon(assessment.status)}</span>
                        <h3 className="text-lg font-medium text-gray-900 dark:text-white">
                          –û—Ü–µ–Ω–∫–∞: {assessment.participant_name}
                        </h3>
                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(assessment.status)}`}>
                          {getStatusText(assessment.status)}
                        </span>
                      </div>
                      
                      <h4 className="text-md font-medium text-primary-600 dark:text-primary-400 mb-2">
                        {assessment.cycle_name}
                      </h4>
                      
                      {assessment.cycle_description && (
                        <p className="text-gray-600 dark:text-gray-300 mb-4">
                          {assessment.cycle_description}
                        </p>
                      )}
                      
                      <div className="flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400">
                        <div className="flex items-center gap-1">
                          <span>üìÖ</span>
                          <span>–û–∫–æ–Ω—á–∞–Ω–∏–µ: {new Date(assessment.end_date).toLocaleDateString()}</span>
                        </div>
                        
                        {assessment.status === 'completed' && assessment.completed_at && (
                          <div className="flex items-center gap-1">
                            <span>‚úÖ</span>
                            <span>–ó–∞–≤–µ—Ä—à–µ–Ω: {new Date(assessment.completed_at).toLocaleDateString()}</span>
                          </div>
                        )}
                        
                        {!expired && assessment.status !== 'completed' && (
                          <div className={`flex items-center gap-1 ${daysRemaining <= 3 ? 'text-red-600' : 'text-green-600'}`}>
                            <span>‚è∞</span>
                            <span>
                              {daysRemaining > 0 
                                ? `–û—Å—Ç–∞–ª–æ—Å—å: ${daysRemaining} –¥–Ω.` 
                                : '–ò—Å—Ç–µ–∫–∞–µ—Ç —Å–µ–≥–æ–¥–Ω—è'
                              }
                            </span>
                          </div>
                        )}
                        
                        {expired && assessment.status !== 'completed' && (
                          <div className="flex items-center gap-1 text-red-600">
                            <span>‚ùå</span>
                            <span>–ü—Ä–æ—Å—Ä–æ—á–µ–Ω</span>
                          </div>
                        )}
                      </div>
                    </div>
                    
                    <div className="flex flex-col items-end gap-2">
                      {assessment.status === 'completed' ? (
                        <div className="text-green-600 font-medium">
                          –ó–∞–≤–µ—Ä—à–µ–Ω–æ
                        </div>
                      ) : expired ? (
                        <div className="text-red-600 font-medium">
                          –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ
                        </div>
                      ) : (
                        <Link
                          to={`/survey/${assessment.id}`}
                          className="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg font-medium transition-colors"
                        >
                          {assessment.status === 'pending' ? '–ù–∞—á–∞—Ç—å' : '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'}
                        </Link>
                      )}
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        )}
        
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
        <div className="mt-8 bg-blue-50 dark:bg-blue-900/20 rounded-lg p-6">
          <h3 className="text-lg font-medium text-blue-900 dark:text-blue-100 mb-3">
            –ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –æ–ø—Ä–æ—Å?
          </h3>
          <div className="space-y-2 text-blue-800 dark:text-blue-200">
            <p>‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å" –∏–ª–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" —Ä—è–¥–æ–º —Å –æ–ø—Ä–æ—Å–æ–º</p>
            <p>‚Ä¢ –û—Ü–µ–Ω–∏—Ç–µ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 5</p>
            <p>‚Ä¢ –í—ã –º–æ–∂–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∑–∂–µ</p>
            <p>‚Ä¢ –ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞–∂–º–∏—Ç–µ "–ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–ø—Ä–æ—Å"</p>
            <p>‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</p>
          </div>
        </div>
      </div>
  );
}; 