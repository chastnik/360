// –ê–≤—Ç–æ—Ä: –°—Ç–∞—Å –ß–∞—à–∏–Ω @chastnik
import React, { useState, useEffect, useCallback } from 'react';
import { useAuth } from '../contexts/AuthContext';
import api from '../services/api';
import { User, Department } from '../types/common';

export const ProfilePage: React.FC = () => {
  const { user, setUser } = useAuth();
  const [editing, setEditing] = useState(false);
  const [changingPassword, setChangingPassword] = useState(false);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState<string | null>(null);
  
  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const [manager, setManager] = useState<User | null>(null);
  const [department, setDepartment] = useState<Department | null>(null);

  // –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –ø—Ä–æ—Ñ–∏–ª—è
  const [profileData, setProfileData] = useState({
    first_name: user?.first_name || '',
    last_name: user?.last_name || '',
    email: user?.email || '',
    position: user?.position || '',
    department: user?.department || ''
  });
  const [avatarFile, setAvatarFile] = useState<File | null>(null);
  const [avatarUploading, setAvatarUploading] = useState(false);

  // –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è
  const [passwordData, setPasswordData] = useState({
    current_password: '',
    new_password: '',
    confirm_password: ''
  });

const loadAdditionalData = useCallback(async () => {
    if (!user) return;

    try {
      // –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const currentUserResponse = await api.get(`/users/${user.id}`);
      const currentUserData = currentUserResponse.data?.success ? currentUserResponse.data.data : currentUserResponse.data;
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å
      if (currentUserData && (
        currentUserData.position !== user.position ||
        currentUserData.department_id !== user.department_id ||
        currentUserData.manager_id !== user.manager_id ||
        currentUserData.department !== user.department
      )) {
        setUser(currentUserData);
      }

      const promises = [];
      
      // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ)
      if (currentUserData.manager_id) {
        promises.push(
          api.get(`/users/${currentUserData.manager_id}`)
            .then(response => {
              const managerData = response.data?.success ? response.data.data : response.data;
              setManager(managerData);
            })
            .catch(error => {
              console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è:', error);
            })
        );
      } else {
        setManager(null);
      }

      // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ–± –æ—Ç–¥–µ–ª–µ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ)
      if (currentUserData.department_id) {
        promises.push(
          api.get(`/departments/${currentUserData.department_id}`)
            .then(response => {
              const departmentData = response.data?.success ? response.data.data : response.data;
              setDepartment(departmentData);
            })
            .catch(error => {
              console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–¥–µ–ª–∞:', error);
            })
        );
      } else {
        setDepartment(null);
      }

      await Promise.all(promises);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
    }
  }, [user, setUser]);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    loadAdditionalData();
  }, [loadAdditionalData]);

  const handleProfileSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError(null);
    setSuccess(null);

    try {
      const response = await api.put('/users/profile', profileData);
      
      if (response.data?.user) {
        setUser(response.data.user);
        setSuccess('–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
        setEditing(false);
      }
    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å');
    } finally {
      setLoading(false);
    }
  };

  const handlePasswordSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (passwordData.new_password !== passwordData.confirm_password) {
      setError('–ù–æ–≤—ã–µ –ø–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
      return;
    }

    if (passwordData.new_password.length < 6) {
      setError('–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤');
      return;
    }

    setLoading(true);
    setError(null);
    setSuccess(null);

    try {
      await api.put('/users/password', {
        current_password: passwordData.current_password,
        new_password: passwordData.new_password
      });
      
      setSuccess('–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω');
      setChangingPassword(false);
      setPasswordData({
        current_password: '',
        new_password: '',
        confirm_password: ''
      });
    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–∞—Ä–æ–ª—è:', error);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å.');
    } finally {
      setLoading(false);
    }
  };

  const handleEditCancel = () => {
    setEditing(false);
    setProfileData({
      first_name: user?.first_name || '',
      last_name: user?.last_name || '',
      email: user?.email || '',
      position: user?.position || '',
      department: user?.department || ''
    });
    setError(null);
  };

  const handleAvatarUpload = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!avatarFile) return;
    try {
      setAvatarUploading(true);
      const form = new FormData();
      form.append('avatar', avatarFile);
      await api.post('/users/profile/avatar', form, { headers: { 'Content-Type': 'multipart/form-data' } });
      setSuccess('–ê–≤–∞—Ç–∞—Ä –æ–±–Ω–æ–≤–ª—ë–Ω');
      setAvatarFile(null);
      await loadAdditionalData();
    } catch (err) {
      console.error('Upload error', err);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞–≤–∞—Ç–∞—Ä');
    } finally {
      setAvatarUploading(false);
    }
  };

  const handlePasswordCancel = () => {
    setChangingPassword(false);
    setPasswordData({
      current_password: '',
      new_password: '',
      confirm_password: ''
    });
    setError(null);
  };

  const getRoleText = (role: string) => {
    switch (role) {
      case 'admin': return '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä';
      case 'manager': return '–ú–µ–Ω–µ–¥–∂–µ—Ä';
      case 'user': return '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
      default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
  };

  const getRoleColor = (role: string) => {
    switch (role) {
      case 'admin': return 'bg-red-100 text-red-800';
      case 'manager': return 'bg-blue-100 text-blue-800';
      case 'user': return 'bg-green-100 text-green-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  if (!user) {
    return (
      <div className="flex justify-center items-center h-64">
        <div className="text-gray-500 dark:text-gray-400">
          –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
        </div>
      </div>
    );
  }

  return (
    <div className="max-w-4xl mx-auto">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-2xl font-bold text-gray-900 dark:text-white">
          –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        </h1>
        <div className="flex gap-3">
          {!editing && !changingPassword && (
            <>
              <button
                onClick={() => setEditing(true)}
                className="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg font-medium transition-colors"
              >
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </button>
              <button
                onClick={() => setChangingPassword(true)}
                className="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg font-medium transition-colors"
              >
                –°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
              </button>
              <button
                onClick={loadAdditionalData}
                className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors"
                title="–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è"
              >
                üîÑ –û–±–Ω–æ–≤–∏—Ç—å
              </button>
            </>
          )}
        </div>
      </div>

      {success && (
        <div className="bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded mb-6">
          {success}
        </div>
      )}

      {error && (
        <div className="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-6">
          {error}
        </div>
      )}

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="lg:col-span-2">
          <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
            <h2 className="text-lg font-medium text-gray-900 dark:text-white mb-4">
              –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            </h2>
            
            {!editing ? (
              <div className="space-y-4">
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                      –ò–º—è
                    </label>
                    <p className="text-gray-900 dark:text-white">
                      {user.first_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </p>
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                      –§–∞–º–∏–ª–∏—è
                    </label>
                    <p className="text-gray-900 dark:text-white">
                      {user.last_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </p>
                  </div>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Email
                  </label>
                  <p className="text-gray-900 dark:text-white">
                    {user.email}
                  </p>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    –î–æ–ª–∂–Ω–æ—Å—Ç—å
                  </label>
                  <p className="text-gray-900 dark:text-white">
                    {user.position || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                  </p>
                  <p className="text-xs text-gray-500 dark:text-gray-400 mt-1">
                    –ù–∞–∑–Ω–∞—á–∞–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
                  </p>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    –û—Ç–¥–µ–ª
                  </label>
                  <p className="text-gray-900 dark:text-white">
                    {department ? department.name : (user.department || '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
                  </p>
                  {department?.description && (
                    <p className="text-sm text-gray-600 dark:text-gray-400 mt-1">
                      {department.description}
                    </p>
                  )}
                  <p className="text-xs text-gray-500 dark:text-gray-400 mt-1">
                    –ù–∞–∑–Ω–∞—á–∞–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
                  </p>
                </div>
                
                {(user.manager_id || manager) && (
                  <div>
                    <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                      –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å
                    </label>
                    <p className="text-gray-900 dark:text-white">
                      {manager ? `${manager.first_name} ${manager.last_name}` : '–ó–∞–≥—Ä—É–∑–∫–∞...'}
                    </p>
                    {manager?.position && (
                      <p className="text-sm text-gray-600 dark:text-gray-400 mt-1">
                        {manager.position}
                      </p>
                    )}
                    <p className="text-xs text-gray-500 dark:text-gray-400 mt-1">
                      –ù–∞–∑–Ω–∞—á–∞–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
                    </p>
                  </div>
                )}
              </div>
            ) : (
              <form onSubmit={handleProfileSubmit} className="space-y-4">
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                      –ò–º—è *
                    </label>
                    <input
                      type="text"
                      value={profileData.first_name}
                      onChange={(e) => setProfileData({...profileData, first_name: e.target.value})}
                      className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white"
                      required
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                      –§–∞–º–∏–ª–∏—è *
                    </label>
                    <input
                      type="text"
                      value={profileData.last_name}
                      onChange={(e) => setProfileData({...profileData, last_name: e.target.value})}
                      className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white"
                      required
                    />
                  </div>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    Email *
                  </label>
                  <input
                    type="email"
                    value={profileData.email}
                    onChange={(e) => setProfileData({...profileData, email: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white"
                    required
                  />
                </div>
                
                <div className="bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-800 p-4 mt-4">
                  <div className="flex items-start">
                    <div className="flex-shrink-0">
                      <svg className="h-5 w-5 text-blue-400" fill="currentColor" viewBox="0 0 20 20">
                        <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clipRule="evenodd" />
                      </svg>
                    </div>
                    <div className="ml-3">
                      <p className="text-sm text-blue-800 dark:text-blue-200">
                        <strong>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</strong> –î–æ–ª–∂–Ω–æ—Å—Ç—å, –æ—Ç–¥–µ–ª –∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –Ω–∞–∑–Ω–∞—á–∞—é—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω—ã —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.
                      </p>
                    </div>
                  </div>
                </div>
                
                <div className="flex justify-end space-x-3 pt-4">
                  <button
                    type="button"
                    onClick={handleEditCancel}
                    className="px-4 py-2 text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-gray-100 transition-colors"
                  >
                    –û—Ç–º–µ–Ω–∞
                  </button>
                  <button
                    type="submit"
                    disabled={loading}
                    className="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg font-medium transition-colors disabled:opacity-50"
                  >
                    {loading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
                  </button>
                </div>
              </form>
            )}
          </div>

          {/* –§–æ—Ä–º–∞ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è */}
          {changingPassword && (
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6 mt-6">
              <h2 className="text-lg font-medium text-gray-900 dark:text-white mb-4">
                –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
              </h2>
              
              <form onSubmit={handlePasswordSubmit} className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    –¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å *
                  </label>
                  <input
                    type="password"
                    value={passwordData.current_password}
                    onChange={(e) => setPasswordData({...passwordData, current_password: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white"
                    required
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å *
                  </label>
                  <input
                    type="password"
                    value={passwordData.new_password}
                    onChange={(e) => setPasswordData({...passwordData, new_password: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white"
                    minLength={6}
                    required
                  />
                  <p className="text-sm text-gray-500 dark:text-gray-400 mt-1">
                    –ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤
                  </p>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å *
                  </label>
                  <input
                    type="password"
                    value={passwordData.confirm_password}
                    onChange={(e) => setPasswordData({...passwordData, confirm_password: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white"
                    required
                  />
                </div>
                
                <div className="flex justify-end space-x-3 pt-4">
                  <button
                    type="button"
                    onClick={handlePasswordCancel}
                    className="px-4 py-2 text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-gray-100 transition-colors"
                  >
                    –û—Ç–º–µ–Ω–∞
                  </button>
                  <button
                    type="submit"
                    disabled={loading}
                    className="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium transition-colors disabled:opacity-50"
                  >
                    {loading ? '–ò–∑–º–µ–Ω–µ–Ω–∏–µ...' : '–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å'}
                  </button>
                </div>
              </form>
            </div>
          )}
        </div>

        {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
        <div>
          <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
            <h2 className="text-lg font-medium text-gray-900 dark:text-white mb-4">
              –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
            </h2>
            
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">–ê–≤–∞—Ç–∞—Ä</label>
                <div className="flex items-center gap-3">
                  <img src={`/api/users/${user.id}/avatar`} onError={(e:any)=>{e.currentTarget.style.display='none';}} alt="avatar" className="w-12 h-12 rounded-full object-cover" />
                  <form onSubmit={handleAvatarUpload} className="flex items-center gap-2">
                    <input type="file" accept="image/*" onChange={(e)=> setAvatarFile(e.target.files?.[0] || null)} className="text-sm" />
                    <button type="submit" disabled={!avatarFile || avatarUploading} className="px-2 py-1 text-sm bg-primary-600 hover:bg-primary-700 text-white rounded disabled:opacity-50">{avatarUploading?'–ó–∞–≥—Ä—É–∑–∫–∞...':'–ó–∞–≥—Ä—É–∑–∏—Ç—å'}</button>
                  </form>
                </div>
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                  –†–æ–ª—å
                </label>
                <span className={`px-2 py-1 rounded-full text-xs font-medium ${getRoleColor(user.role)}`}>
                  {getRoleText(user.role)}
                </span>
              </div>
              
              {user.created_at && (
                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                  </label>
                  <p className="text-gray-900 dark:text-white text-sm">
                    {new Date(user.created_at).toLocaleDateString('ru-RU', {
                      day: 'numeric',
                      month: 'long',
                      year: 'numeric'
                    })}
                  </p>
                </div>
              )}
              
              {user.updated_at && (
                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                  </label>
                  <p className="text-gray-900 dark:text-white text-sm">
                    {new Date(user.updated_at).toLocaleDateString('ru-RU', {
                      day: 'numeric',
                      month: 'long',
                      year: 'numeric'
                    })}
                  </p>
                </div>
              )}
            </div>
          </div>

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞) */}
          <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6 mt-6">
            <h2 className="text-lg font-medium text-gray-900 dark:text-white mb-4">
              –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            </h2>
            
            <div className="space-y-3">
              <div className="flex justify-between items-center">
                <span className="text-sm text-gray-600 dark:text-gray-300">
                  –ü—Ä–æ–π–¥–µ–Ω–æ –æ—Ü–µ–Ω–æ–∫:
                </span>
                <span className="font-medium text-gray-900 dark:text-white">
                  -
                </span>
              </div>
              
              <div className="flex justify-between items-center">
                <span className="text-sm text-gray-600 dark:text-gray-300">
                  –°–æ–∑–¥–∞–Ω–æ —Ü–∏–∫–ª–æ–≤:
                </span>
                <span className="font-medium text-gray-900 dark:text-white">
                  -
                </span>
              </div>
              
              <div className="flex justify-between items-center">
                <span className="text-sm text-gray-600 dark:text-gray-300">
                  –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª:
                </span>
                <span className="font-medium text-gray-900 dark:text-white">
                  -
                </span>
              </div>
            </div>
            
            <p className="text-xs text-gray-500 dark:text-gray-400 mt-4">
              –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ —É—á–∞—Å—Ç–∏—è –≤ –æ—Ü–µ–Ω–∫–∞—Ö
            </p>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ –æ—Ü–µ–Ω–∫–∏ */}
          {user.manager_id && (
            <div className="bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-800 p-6 mt-6">
              <h2 className="text-lg font-medium text-blue-900 dark:text-blue-100 mb-4">
                üí° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ –æ—Ü–µ–Ω–∫–∏
              </h2>
              
              <div className="space-y-3 text-sm text-blue-800 dark:text-blue-200">
                <p>
                  <strong>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è:</strong> –ü—Ä–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ 360¬∞ –æ—Ü–µ–Ω–∫–∏ –≤–∞—à —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤, –¥–∞–∂–µ –µ—Å–ª–∏ –≤—ã –µ–≥–æ –Ω–µ –≤—ã–±–µ—Ä–µ—Ç–µ.
                </p>
                <p>
                  <strong>–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:</strong> –í—Å–µ –æ—Ü–µ–Ω–∫–∏ –∞–Ω–æ–Ω–∏–º–Ω—ã, –∏ –¥–∞–∂–µ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –Ω–µ –±—É–¥–µ—Ç –∑–Ω–∞—Ç—å, –∫—Ç–æ –∏–º–µ–Ω–Ω–æ –µ–≥–æ –æ—Ü–µ–Ω–∏–≤–∞–ª.
                </p>
                <p>
                  <strong>–¶–µ–ª—å:</strong> –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–æ–ª–µ–µ –ø–æ–ª–Ω—É—é –∫–∞—Ä—Ç–∏–Ω—É –≤–∞—à–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ä—å–µ—Ä—ã.
                </p>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};