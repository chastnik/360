import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import api from '../../services/api';

interface DashboardStats {
  totalUsers: number;
  activeUsers: number;
  totalCycles: number;
  activeCycles: number;
  completedAssessments: number;
  pendingAssessments: number;
  totalQuestions: number;
  totalCategories: number;
  mattermostConnection: boolean;
  mattermostUsers: number;
}

interface RecentActivity {
  id: number;
  type: 'cycle_created' | 'cycle_started' | 'assessment_completed' | 'user_registered';
  description: string;
  user: string;
  timestamp: string;
}

const AdminDashboard: React.FC = () => {
  const [stats, setStats] = useState<DashboardStats | null>(null);
  const [recentActivity, setRecentActivity] = useState<RecentActivity[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    loadDashboardData();
  }, []);

  const loadDashboardData = async () => {
    try {
      setLoading(true);
      
      // –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
      const [
        usersResponse,
        cyclesResponse,
        assessmentsResponse,
        questionsResponse,
        categoriesResponse,
        mattermostResponse
      ] = await Promise.all([
        api.get('/users'),
        api.get('/cycles'),
        api.get('/assessments'),
        api.get('/questions'),
        api.get('/categories'),
        api.get('/mattermost/integration-stats').catch(() => ({ data: { connection: { status: 'disconnected' }, users: { withMattermost: 0 } } }))
      ]);

      // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç API
      const users = usersResponse.data?.success ? usersResponse.data.data : usersResponse.data;
      const cycles = cyclesResponse.data?.success ? cyclesResponse.data.data : cyclesResponse.data;
      const assessments = assessmentsResponse.data?.success ? assessmentsResponse.data.data : assessmentsResponse.data;
      const questions = questionsResponse.data?.success ? questionsResponse.data.data : questionsResponse.data;
      const categories = categoriesResponse.data?.success ? categoriesResponse.data.data : categoriesResponse.data;
      const mattermostData = mattermostResponse.data;

      const dashboardStats: DashboardStats = {
        totalUsers: Array.isArray(users) ? users.length : 0,
        activeUsers: Array.isArray(users) ? users.filter((user: any) => user.is_active).length : 0,
        totalCycles: Array.isArray(cycles) ? cycles.length : 0,
        activeCycles: Array.isArray(cycles) ? cycles.filter((cycle: any) => cycle.status === 'active').length : 0,
        completedAssessments: Array.isArray(assessments) ? assessments.filter((assessment: any) => assessment.status === 'completed').length : 0,
        pendingAssessments: Array.isArray(assessments) ? assessments.filter((assessment: any) => assessment.status === 'pending' || assessment.status === 'in_progress').length : 0,
        totalQuestions: Array.isArray(questions) ? questions.length : 0,
        totalCategories: Array.isArray(categories) ? categories.length : 0,
        mattermostConnection: mattermostData.connection?.status === 'connected',
        mattermostUsers: mattermostData.users?.withMattermost || 0
      };

      setStats(dashboardStats);

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–µ–¥–∞–≤–Ω—é—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–º–æ–∫-–¥–∞–Ω–Ω—ã–µ)
      const activities: RecentActivity[] = [
        {
          id: 1,
          type: 'cycle_started',
          description: '–ó–∞–ø—É—â–µ–Ω —Ü–∏–∫–ª –æ—Ü–µ–Ω–∫–∏ "Q1 2024"',
          user: 'Admin',
          timestamp: new Date(Date.now() - 1000 * 60 * 30).toISOString()
        },
        {
          id: 2,
          type: 'assessment_completed',
          description: '–ó–∞–≤–µ—Ä—à–µ–Ω–∞ –æ—Ü–µ–Ω–∫–∞ –¥–ª—è –ò–≤–∞–Ω–æ–≤–∞ –ò.–ò.',
          user: '–ü–µ—Ç—Ä–æ–≤ –ü.–ü.',
          timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2).toISOString()
        },
        {
          id: 3,
          type: 'user_registered',
          description: '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
          user: 'HR Manager',
          timestamp: new Date(Date.now() - 1000 * 60 * 60 * 4).toISOString()
        }
      ];

      setRecentActivity(activities);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–∞—à–±–æ—Ä–¥–∞:', error);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ');
    } finally {
      setLoading(false);
    }
  };

  const getActivityIcon = (type: string) => {
    switch (type) {
      case 'cycle_created': return 'üîÑ';
      case 'cycle_started': return '‚ñ∂Ô∏è';
      case 'assessment_completed': return '‚úÖ';
      case 'user_registered': return 'üë§';
      default: return 'üìù';
    }
  };

  const formatTimeAgo = (timestamp: string) => {
    const date = new Date(timestamp);
    const now = new Date();
    const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));
    
    if (diffInMinutes < 60) {
      return `${diffInMinutes} –º–∏–Ω –Ω–∞–∑–∞–¥`;
    } else if (diffInMinutes < 1440) {
      return `${Math.floor(diffInMinutes / 60)} —á –Ω–∞–∑–∞–¥`;
    } else {
      return `${Math.floor(diffInMinutes / 1440)} –¥–Ω –Ω–∞–∑–∞–¥`;
    }
  };

  if (loading) {
    return (
      <div className="flex justify-center items-center h-64">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600"></div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded">
        {error}
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="md:flex md:items-center md:justify-between">
        <div className="flex-1 min-w-0">
          <h1 className="text-2xl font-bold leading-7 text-gray-900 dark:text-white sm:text-3xl sm:truncate">
            –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
          </h1>
          <p className="mt-1 text-sm text-gray-500 dark:text-gray-400">
            –û–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã 360¬∞ –æ—Ü–µ–Ω–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
          </p>
        </div>
        <div className="mt-4 flex md:mt-0 md:ml-4">
          <Link
            to="/admin/cycles"
            className="ml-3 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
          >
            –°–æ–∑–¥–∞—Ç—å —Ü–∏–∫–ª –æ—Ü–µ–Ω–∫–∏
          </Link>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4">
        <div className="bg-white dark:bg-gray-800 overflow-hidden shadow rounded-lg">
          <div className="p-5">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="text-2xl">üë•</div>
              </div>
              <div className="ml-5 w-0 flex-1">
                <dl>
                  <dt className="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">
                    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
                  </dt>
                  <dd className="text-lg font-medium text-gray-900 dark:text-white">
                    {stats?.activeUsers} / {stats?.totalUsers}
                  </dd>
                </dl>
              </div>
            </div>
          </div>
          <div className="bg-gray-50 dark:bg-gray-700 px-5 py-3">
            <div className="text-sm">
              <Link to="/admin/users" className="font-medium text-primary-600 hover:text-primary-500">
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
              </Link>
            </div>
          </div>
        </div>

        <div className="bg-white dark:bg-gray-800 overflow-hidden shadow rounded-lg">
          <div className="p-5">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="text-2xl">üîÑ</div>
              </div>
              <div className="ml-5 w-0 flex-1">
                <dl>
                  <dt className="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">
                    –¶–∏–∫–ª—ã –æ—Ü–µ–Ω–∫–∏
                  </dt>
                  <dd className="text-lg font-medium text-gray-900 dark:text-white">
                    {stats?.activeCycles} / {stats?.totalCycles}
                  </dd>
                </dl>
              </div>
            </div>
          </div>
          <div className="bg-gray-50 dark:bg-gray-700 px-5 py-3">
            <div className="text-sm">
              <Link to="/admin/cycles" className="font-medium text-primary-600 hover:text-primary-500">
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–∏–∫–ª–∞–º–∏
              </Link>
            </div>
          </div>
        </div>

        <div className="bg-white dark:bg-gray-800 overflow-hidden shadow rounded-lg">
          <div className="p-5">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="text-2xl">üìù</div>
              </div>
              <div className="ml-5 w-0 flex-1">
                <dl>
                  <dt className="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">
                    –û—Ü–µ–Ω–∫–∏
                  </dt>
                  <dd className="text-lg font-medium text-gray-900 dark:text-white">
                    {stats?.completedAssessments} / {(stats?.completedAssessments || 0) + (stats?.pendingAssessments || 0)}
                  </dd>
                </dl>
              </div>
            </div>
          </div>
          <div className="bg-gray-50 dark:bg-gray-700 px-5 py-3">
            <div className="text-sm">
              <Link to="/admin/reports" className="font-medium text-primary-600 hover:text-primary-500">
                –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á–µ—Ç—ã
              </Link>
            </div>
          </div>
        </div>

        <div className="bg-white dark:bg-gray-800 overflow-hidden shadow rounded-lg">
          <div className="p-5">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="text-2xl">üí¨</div>
              </div>
              <div className="ml-5 w-0 flex-1">
                <dl>
                  <dt className="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">
                    Mattermost
                  </dt>
                  <dd className="text-lg font-medium text-gray-900 dark:text-white">
                    {stats?.mattermostUsers} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                  </dd>
                </dl>
              </div>
            </div>
          </div>
          <div className="bg-gray-50 dark:bg-gray-700 px-5 py-3">
            <div className="text-sm">
              <Link to="/admin/mattermost" className="font-medium text-primary-600 hover:text-primary-500">
                –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
              </Link>
            </div>
          </div>
        </div>
      </div>

      {/* –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã */}
      <div className="bg-white dark:bg-gray-800 shadow rounded-lg">
        <div className="px-4 py-5 sm:p-6">
          <h3 className="text-lg leading-6 font-medium text-gray-900 dark:text-white">
            –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
          </h3>
          <div className="mt-5 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3">
            <div className="flex items-center">
              <div className={`flex-shrink-0 w-3 h-3 rounded-full ${stats?.mattermostConnection ? 'bg-green-500' : 'bg-red-500'}`}></div>
              <div className="ml-3">
                <p className="text-sm font-medium text-gray-900 dark:text-white">
                  Mattermost
                </p>
                <p className="text-sm text-gray-500 dark:text-gray-400">
                  {stats?.mattermostConnection ? '–ü–æ–¥–∫–ª—é—á–µ–Ω' : '–û—Ç–∫–ª—é—á–µ–Ω'}
                </p>
              </div>
            </div>
            <div className="flex items-center">
              <div className="flex-shrink-0 w-3 h-3 rounded-full bg-green-500"></div>
              <div className="ml-3">
                <p className="text-sm font-medium text-gray-900 dark:text-white">
                  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
                </p>
                <p className="text-sm text-gray-500 dark:text-gray-400">
                  –†–∞–±–æ—Ç–∞–µ—Ç
                </p>
              </div>
            </div>
            <div className="flex items-center">
              <div className="flex-shrink-0 w-3 h-3 rounded-full bg-green-500"></div>
              <div className="ml-3">
                <p className="text-sm font-medium text-gray-900 dark:text-white">
                  API
                </p>
                <p className="text-sm text-gray-500 dark:text-gray-400">
                  –†–∞–±–æ—Ç–∞–µ—Ç
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –ù–µ–¥–∞–≤–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å */}
      <div className="bg-white dark:bg-gray-800 shadow rounded-lg">
        <div className="px-4 py-5 sm:p-6">
          <h3 className="text-lg leading-6 font-medium text-gray-900 dark:text-white">
            –ù–µ–¥–∞–≤–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
          </h3>
          <div className="mt-5">
            {recentActivity.length > 0 ? (
              <div className="flow-root">
                <ul className="-mb-8">
                  {recentActivity.map((activity, activityIdx) => (
                    <li key={activity.id}>
                      <div className="relative pb-8">
                        {activityIdx !== recentActivity.length - 1 ? (
                          <span className="absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200 dark:bg-gray-600" aria-hidden="true" />
                        ) : null}
                        <div className="relative flex space-x-3">
                          <div>
                            <span className="text-xl">
                              {getActivityIcon(activity.type)}
                            </span>
                          </div>
                          <div className="min-w-0 flex-1 pt-1.5 flex justify-between space-x-4">
                            <div>
                              <p className="text-sm text-gray-500 dark:text-gray-400">
                                {activity.description}{' '}
                                <span className="font-medium text-gray-900 dark:text-white">
                                  {activity.user}
                                </span>
                              </p>
                            </div>
                            <div className="text-right text-sm whitespace-nowrap text-gray-500 dark:text-gray-400">
                              {formatTimeAgo(activity.timestamp)}
                            </div>
                          </div>
                        </div>
                      </div>
                    </li>
                  ))}
                </ul>
              </div>
            ) : (
              <p className="text-sm text-gray-500 dark:text-gray-400">
                –ù–µ—Ç –Ω–µ–¥–∞–≤–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
              </p>
            )}
          </div>
        </div>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="bg-white dark:bg-gray-800 shadow rounded-lg">
        <div className="px-4 py-5 sm:p-6">
          <h3 className="text-lg leading-6 font-medium text-gray-900 dark:text-white">
            –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
          </h3>
          <div className="mt-5 grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
            <Link
              to="/admin/users"
              className="relative rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 px-6 py-5 shadow-sm flex items-center space-x-3 hover:border-gray-400 dark:hover:border-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
            >
              <div className="flex-shrink-0">
                <span className="text-xl">üë•</span>
              </div>
              <div className="flex-1 min-w-0">
                <p className="text-sm font-medium text-gray-900 dark:text-white">
                  –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                </p>
                <p className="text-sm text-gray-500 dark:text-gray-400">
                  –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
                </p>
              </div>
            </Link>

            <Link
              to="/admin/cycles"
              className="relative rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 px-6 py-5 shadow-sm flex items-center space-x-3 hover:border-gray-400 dark:hover:border-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
            >
              <div className="flex-shrink-0">
                <span className="text-xl">üîÑ</span>
              </div>
              <div className="flex-1 min-w-0">
                <p className="text-sm font-medium text-gray-900 dark:text-white">
                  –°–æ–∑–¥–∞—Ç—å —Ü–∏–∫–ª –æ—Ü–µ–Ω–∫–∏
                </p>
                <p className="text-sm text-gray-500 dark:text-gray-400">
                  –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤—ã–π —Ü–∏–∫–ª 360¬∞ –æ—Ü–µ–Ω–∫–∏
                </p>
              </div>
            </Link>

            <Link
              to="/admin/questions"
              className="relative rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 px-6 py-5 shadow-sm flex items-center space-x-3 hover:border-gray-400 dark:hover:border-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
            >
              <div className="flex-shrink-0">
                <span className="text-xl">‚ùì</span>
              </div>
              <div className="flex-1 min-w-0">
                <p className="text-sm font-medium text-gray-900 dark:text-white">
                  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞–º–∏
                </p>
                <p className="text-sm text-gray-500 dark:text-gray-400">
                  –î–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã
                </p>
              </div>
            </Link>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AdminDashboard; 