{"ast":null,"code":"import React,{useState,useEffect}from'react';import api from'../../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminQuestions=()=>{const[questions,setQuestions]=useState([]);const[categories,setCategories]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[successMessage,setSuccessMessage]=useState(null);const[showCreateForm,setShowCreateForm]=useState(false);const[selectedQuestion,setSelectedQuestion]=useState(null);const[showEditForm,setShowEditForm]=useState(false);const[selectedCategory,setSelectedCategory]=useState(null);const[formData,setFormData]=useState({text:'',description:'',category_id:0,type:'rating',min_value:1,max_value:5,order_index:0,is_active:true});useEffect(()=>{loadData();},[]);const loadData=async()=>{try{setLoading(true);const[questionsResponse,categoriesResponse]=await Promise.all([api.get('/questions'),api.get('/categories')]);const questionsWithCategories=questionsResponse.data.map(question=>({...question,category:categoriesResponse.data.find(cat=>cat.id===question.category_id)}));setQuestions(questionsWithCategories.sort((a,b)=>a.category_id===b.category_id?a.order_index-b.order_index:a.category_id-b.category_id));setCategories(categoriesResponse.data.filter(cat=>cat.is_active));}catch(error){console.error('Ошибка загрузки данных:',error);setError('Не удалось загрузить данные');}finally{setLoading(false);}};const handleCreateQuestion=async e=>{e.preventDefault();try{const response=await api.post('/questions',formData);if(response.data.success){setSuccessMessage('Вопрос создан');setShowCreateForm(false);resetForm();loadData();}else{setError(response.data.error||'Ошибка создания вопроса');}}catch(error){var _error$response,_error$response$data;console.error('Ошибка создания вопроса:',error);setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Ошибка создания вопроса');}};const handleUpdateQuestion=async e=>{e.preventDefault();if(!selectedQuestion)return;try{const response=await api.put(`/questions/${selectedQuestion.id}`,formData);if(response.data.success){setSuccessMessage('Вопрос обновлен');setShowEditForm(false);setSelectedQuestion(null);resetForm();loadData();}else{setError(response.data.error||'Ошибка обновления вопроса');}}catch(error){var _error$response2,_error$response2$data;console.error('Ошибка обновления вопроса:',error);setError(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Ошибка обновления вопроса');}};const handleDeleteQuestion=async questionId=>{if(!confirm('Вы уверены, что хотите удалить этот вопрос?')){return;}try{await api.delete(`/questions/${questionId}`);setSuccessMessage('Вопрос удален');loadData();}catch(error){var _error$response3,_error$response3$data;console.error('Ошибка удаления вопроса:',error);setError(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'Ошибка удаления вопроса');}};const handleToggleActive=async questionId=>{const question=questions.find(q=>q.id===questionId);if(!question)return;try{await api.patch(`/questions/${questionId}/toggle-active`,{is_active:!question.is_active});setSuccessMessage(question.is_active?'Вопрос деактивирован':'Вопрос активирован');loadData();}catch(error){var _error$response4,_error$response4$data;console.error('Ошибка изменения статуса вопроса:',error);setError(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||'Ошибка изменения статуса вопроса');}};const handleReorder=async(questionId,direction)=>{const question=questions.find(q=>q.id===questionId);if(!question)return;const categoryQuestions=questions.filter(q=>q.category_id===question.category_id);const currentIndex=categoryQuestions.findIndex(q=>q.id===questionId);if(currentIndex===-1)return;const newIndex=direction==='up'?currentIndex-1:currentIndex+1;if(newIndex<0||newIndex>=categoryQuestions.length)return;try{const reorderedQuestions=[...categoryQuestions];const[moved]=reorderedQuestions.splice(currentIndex,1);reorderedQuestions.splice(newIndex,0,moved);// Обновляем order_index для всех затронутых вопросов\nconst updates=reorderedQuestions.map((q,index)=>({id:q.id,order_index:index}));await api.patch('/questions/reorder',{questions:updates});setSuccessMessage('Порядок вопросов обновлен');loadData();}catch(error){var _error$response5,_error$response5$data;console.error('Ошибка изменения порядка вопросов:',error);setError(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)||'Ошибка изменения порядка вопросов');}};const openEditForm=question=>{setSelectedQuestion(question);setFormData({text:question.text,description:question.description||'',category_id:question.category_id,type:question.type,min_value:question.min_value,max_value:question.max_value,order_index:question.order_index,is_active:question.is_active});setShowEditForm(true);};const resetForm=()=>{setFormData({text:'',description:'',category_id:categories.length>0?categories[0].id:0,type:'rating',min_value:1,max_value:5,order_index:0,is_active:true});};const openCreateForm=()=>{resetForm();setShowCreateForm(true);};const getTypeText=type=>{switch(type){case'rating':return'Оценка';case'text':return'Текст';case'boolean':return'Да/Нет';default:return type;}};const getTypeColor=type=>{switch(type){case'rating':return'bg-blue-100 text-blue-800';case'text':return'bg-green-100 text-green-800';case'boolean':return'bg-purple-100 text-purple-800';default:return'bg-gray-100 text-gray-800';}};const filteredQuestions=selectedCategory?questions.filter(q=>q.category_id===selectedCategory):questions;const groupedQuestions=filteredQuestions.reduce((acc,question)=>{const categoryId=question.category_id;if(!acc[categoryId]){acc[categoryId]=[];}acc[categoryId].push(question);return acc;},{});// Очистка сообщений через 5 секунд\nuseEffect(()=>{if(successMessage||error){const timer=setTimeout(()=>{setSuccessMessage(null);setError(null);},5000);return()=>clearTimeout(timer);}},[successMessage,error]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"md:flex md:items-center md:justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 min-w-0\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold leading-7 text-gray-900 dark:text-white sm:text-3xl sm:truncate\",children:\"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\\u043C\\u0438\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-gray-500 dark:text-gray-400\",children:\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0432\\u0430\\u0439\\u0442\\u0435 \\u0438 \\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0439\\u0442\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\\u043C\\u0438 \\u0434\\u043B\\u044F \\u043E\\u0446\\u0435\\u043D\\u043A\\u0438 \\u043F\\u043E \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\\u043C\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 flex md:mt-0 md:ml-4\",children:/*#__PURE__*/_jsx(\"button\",{onClick:openCreateForm,className:\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\",children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"})})]}),successMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded\",children:successMessage}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"category-filter\",className:\"text-sm font-medium text-gray-700 dark:text-gray-300\",children:\"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440 \\u043F\\u043E \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"category-filter\",value:selectedCategory||'',onChange:e=>setSelectedCategory(e.target.value?parseInt(e.target.value):null),className:\"border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u0412\\u0441\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\"}),categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category.id,children:category.name},category.id))]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:Object.entries(groupedQuestions).map(_ref=>{let[categoryId,categoryQuestions]=_ref;const category=categories.find(c=>c.id===parseInt(categoryId));if(!category)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 shadow rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-4 py-5 sm:px-6 border-b border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm mr-3\",style:{backgroundColor:category.color},children:category.icon}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg leading-6 font-medium text-gray-900 dark:text-white\",children:category.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"mt-1 text-sm text-gray-500 dark:text-gray-400\",children:[categoryQuestions.length,\" \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"]})]})]})}),/*#__PURE__*/_jsx(\"ul\",{className:\"divide-y divide-gray-200 dark:divide-gray-700\",children:categoryQuestions.map((question,index)=>/*#__PURE__*/_jsx(\"li\",{className:\"px-4 py-4 sm:px-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 min-w-0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-900 dark:text-white\",children:question.text}),/*#__PURE__*/_jsx(\"span\",{className:`ml-2 px-2 py-1 text-xs font-medium rounded-full ${getTypeColor(question.type)}`,children:getTypeText(question.type)}),!question.is_active&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\",children:\"\\u041D\\u0435\\u0430\\u043A\\u0442\\u0438\\u0432\\u0435\\u043D\"})]}),question.description&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-gray-500 dark:text-gray-400\",children:question.description}),question.type==='rating'&&/*#__PURE__*/_jsxs(\"p\",{className:\"mt-1 text-xs text-gray-400 dark:text-gray-500\",children:[\"\\u0414\\u0438\\u0430\\u043F\\u0430\\u0437\\u043E\\u043D: \",question.min_value,\" - \",question.max_value]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col space-y-1\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleReorder(question.id,'up'),disabled:index===0,className:`p-1 rounded text-xs ${index===0?'text-gray-300 cursor-not-allowed':'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200'}`,children:\"\\u2191\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleReorder(question.id,'down'),disabled:index===categoryQuestions.length-1,className:`p-1 rounded text-xs ${index===categoryQuestions.length-1?'text-gray-300 cursor-not-allowed':'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200'}`,children:\"\\u2193\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>openEditForm(question),className:\"text-primary-600 hover:text-primary-900 dark:text-primary-400 dark:hover:text-primary-300\",children:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleToggleActive(question.id),className:`${question.is_active?'text-yellow-600 hover:text-yellow-900':'text-green-600 hover:text-green-900'}`,children:question.is_active?'Деактивировать':'Активировать'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteQuestion(question.id),className:\"text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300\",children:\"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"})]})]})},question.id))})]},categoryId);})}),(showCreateForm||showEditForm)&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg p-6 max-w-md w-full mx-4 max-h-[90vh] overflow-y-auto\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 dark:text-white mb-4\",children:showCreateForm?'Создать вопрос':'Редактировать вопрос'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:showCreateForm?handleCreateQuestion:handleUpdateQuestion,className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",children:\"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430 *\"}),/*#__PURE__*/_jsx(\"textarea\",{value:formData.text,onChange:e=>setFormData({...formData,text:e.target.value}),rows:3,className:\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",children:\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"}),/*#__PURE__*/_jsx(\"textarea\",{value:formData.description,onChange:e=>setFormData({...formData,description:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",children:\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F *\"}),/*#__PURE__*/_jsxs(\"select\",{value:formData.category_id,onChange:e=>setFormData({...formData,category_id:parseInt(e.target.value)}),className:\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044E\"}),categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category.id,children:category.name},category.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",children:\"\\u0422\\u0438\\u043F \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430 *\"}),/*#__PURE__*/_jsxs(\"select\",{value:formData.type,onChange:e=>setFormData({...formData,type:e.target.value}),className:\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"rating\",children:\"\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430 (\\u0448\\u043A\\u0430\\u043B\\u0430)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"text\",children:\"\\u0422\\u0435\\u043A\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\"}),/*#__PURE__*/_jsx(\"option\",{value:\"boolean\",children:\"\\u0414\\u0430/\\u041D\\u0435\\u0442\"})]})]}),formData.type==='rating'&&/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",children:\"\\u041C\\u0438\\u043D\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:formData.min_value,onChange:e=>setFormData({...formData,min_value:parseInt(e.target.value)}),className:\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\",min:\"1\",max:\"10\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",children:\"\\u041C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:formData.max_value,onChange:e=>setFormData({...formData,max_value:parseInt(e.target.value)}),className:\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\",min:\"1\",max:\"10\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"is_active\",type:\"checkbox\",checked:formData.is_active,onChange:e=>setFormData({...formData,is_active:e.target.checked}),className:\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"is_active\",className:\"ml-2 block text-sm text-gray-900 dark:text-white\",children:\"\\u0410\\u043A\\u0442\\u0438\\u0432\\u0435\\u043D\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-3 pt-4\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>{setShowCreateForm(false);setShowEditForm(false);setSelectedQuestion(null);},className:\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\",children:\"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\",children:showCreateForm?'Создать':'Сохранить'})]})]})]})})]});};export default AdminQuestions;","map":{"version":3,"names":["React","useState","useEffect","api","jsx","_jsx","jsxs","_jsxs","AdminQuestions","questions","setQuestions","categories","setCategories","loading","setLoading","error","setError","successMessage","setSuccessMessage","showCreateForm","setShowCreateForm","selectedQuestion","setSelectedQuestion","showEditForm","setShowEditForm","selectedCategory","setSelectedCategory","formData","setFormData","text","description","category_id","type","min_value","max_value","order_index","is_active","loadData","questionsResponse","categoriesResponse","Promise","all","get","questionsWithCategories","data","map","question","category","find","cat","id","sort","a","b","filter","console","handleCreateQuestion","e","preventDefault","response","post","success","resetForm","_error$response","_error$response$data","handleUpdateQuestion","put","_error$response2","_error$response2$data","handleDeleteQuestion","questionId","confirm","delete","_error$response3","_error$response3$data","handleToggleActive","q","patch","_error$response4","_error$response4$data","handleReorder","direction","categoryQuestions","currentIndex","findIndex","newIndex","length","reorderedQuestions","moved","splice","updates","index","_error$response5","_error$response5$data","openEditForm","openCreateForm","getTypeText","getTypeColor","filteredQuestions","groupedQuestions","reduce","acc","categoryId","push","timer","setTimeout","clearTimeout","className","children","onClick","htmlFor","value","onChange","target","parseInt","name","Object","entries","_ref","c","style","backgroundColor","color","icon","disabled","onSubmit","rows","required","min","max","checked"],"sources":["/Users/chastnik/Documents/projects/360/frontend/src/pages/admin/AdminQuestions.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from '../../services/api';\n\ninterface Category {\n  id: number;\n  name: string;\n  description: string;\n  color: string;\n  icon: string;\n  is_active: boolean;\n}\n\ninterface Question {\n  id: number;\n  category_id: number;\n  text: string;\n  description?: string;\n  type: 'rating' | 'text' | 'boolean';\n  min_value: number;\n  max_value: number;\n  order_index: number;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n  category?: Category;\n}\n\ninterface QuestionFormData {\n  text: string;\n  description: string;\n  category_id: number;\n  type: 'rating' | 'text' | 'boolean';\n  min_value: number;\n  max_value: number;\n  order_index: number;\n  is_active: boolean;\n}\n\nconst AdminQuestions: React.FC = () => {\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [selectedQuestion, setSelectedQuestion] = useState<Question | null>(null);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\n\n  const [formData, setFormData] = useState<QuestionFormData>({\n    text: '',\n    description: '',\n    category_id: 0,\n    type: 'rating',\n    min_value: 1,\n    max_value: 5,\n    order_index: 0,\n    is_active: true\n  });\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      const [questionsResponse, categoriesResponse] = await Promise.all([\n        api.get('/questions'),\n        api.get('/categories')\n      ]);\n\n      const questionsWithCategories = questionsResponse.data.map((question: Question) => ({\n        ...question,\n        category: categoriesResponse.data.find((cat: Category) => cat.id === question.category_id)\n      }));\n\n      setQuestions(questionsWithCategories.sort((a, b) => \n        a.category_id === b.category_id ? \n          a.order_index - b.order_index : \n          a.category_id - b.category_id\n      ));\n      setCategories(categoriesResponse.data.filter((cat: Category) => cat.is_active));\n    } catch (error) {\n      console.error('Ошибка загрузки данных:', error);\n      setError('Не удалось загрузить данные');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateQuestion = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const response = await api.post('/questions', formData);\n      \n      if (response.data.success) {\n        setSuccessMessage('Вопрос создан');\n        setShowCreateForm(false);\n        resetForm();\n        loadData();\n      } else {\n        setError(response.data.error || 'Ошибка создания вопроса');\n      }\n    } catch (error: any) {\n      console.error('Ошибка создания вопроса:', error);\n      setError(error.response?.data?.error || 'Ошибка создания вопроса');\n    }\n  };\n\n  const handleUpdateQuestion = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!selectedQuestion) return;\n\n    try {\n      const response = await api.put(`/questions/${selectedQuestion.id}`, formData);\n      \n      if (response.data.success) {\n        setSuccessMessage('Вопрос обновлен');\n        setShowEditForm(false);\n        setSelectedQuestion(null);\n        resetForm();\n        loadData();\n      } else {\n        setError(response.data.error || 'Ошибка обновления вопроса');\n      }\n    } catch (error: any) {\n      console.error('Ошибка обновления вопроса:', error);\n      setError(error.response?.data?.error || 'Ошибка обновления вопроса');\n    }\n  };\n\n  const handleDeleteQuestion = async (questionId: number) => {\n    if (!confirm('Вы уверены, что хотите удалить этот вопрос?')) {\n      return;\n    }\n\n    try {\n      await api.delete(`/questions/${questionId}`);\n      setSuccessMessage('Вопрос удален');\n      loadData();\n    } catch (error: any) {\n      console.error('Ошибка удаления вопроса:', error);\n      setError(error.response?.data?.error || 'Ошибка удаления вопроса');\n    }\n  };\n\n  const handleToggleActive = async (questionId: number) => {\n    const question = questions.find(q => q.id === questionId);\n    if (!question) return;\n\n    try {\n      await api.patch(`/questions/${questionId}/toggle-active`, {\n        is_active: !question.is_active\n      });\n      setSuccessMessage(question.is_active ? 'Вопрос деактивирован' : 'Вопрос активирован');\n      loadData();\n    } catch (error: any) {\n      console.error('Ошибка изменения статуса вопроса:', error);\n      setError(error.response?.data?.error || 'Ошибка изменения статуса вопроса');\n    }\n  };\n\n  const handleReorder = async (questionId: number, direction: 'up' | 'down') => {\n    const question = questions.find(q => q.id === questionId);\n    if (!question) return;\n\n    const categoryQuestions = questions.filter(q => q.category_id === question.category_id);\n    const currentIndex = categoryQuestions.findIndex(q => q.id === questionId);\n    \n    if (currentIndex === -1) return;\n    \n    const newIndex = direction === 'up' ? currentIndex - 1 : currentIndex + 1;\n    if (newIndex < 0 || newIndex >= categoryQuestions.length) return;\n\n    try {\n      const reorderedQuestions = [...categoryQuestions];\n      const [moved] = reorderedQuestions.splice(currentIndex, 1);\n      reorderedQuestions.splice(newIndex, 0, moved);\n\n      // Обновляем order_index для всех затронутых вопросов\n      const updates = reorderedQuestions.map((q, index) => ({\n        id: q.id,\n        order_index: index\n      }));\n\n      await api.patch('/questions/reorder', { questions: updates });\n      setSuccessMessage('Порядок вопросов обновлен');\n      loadData();\n    } catch (error: any) {\n      console.error('Ошибка изменения порядка вопросов:', error);\n      setError(error.response?.data?.error || 'Ошибка изменения порядка вопросов');\n    }\n  };\n\n  const openEditForm = (question: Question) => {\n    setSelectedQuestion(question);\n    setFormData({\n      text: question.text,\n      description: question.description || '',\n      category_id: question.category_id,\n      type: question.type,\n      min_value: question.min_value,\n      max_value: question.max_value,\n      order_index: question.order_index,\n      is_active: question.is_active\n    });\n    setShowEditForm(true);\n  };\n\n  const resetForm = () => {\n    setFormData({\n      text: '',\n      description: '',\n      category_id: categories.length > 0 ? categories[0].id : 0,\n      type: 'rating',\n      min_value: 1,\n      max_value: 5,\n      order_index: 0,\n      is_active: true\n    });\n  };\n\n  const openCreateForm = () => {\n    resetForm();\n    setShowCreateForm(true);\n  };\n\n  const getTypeText = (type: string) => {\n    switch (type) {\n      case 'rating': return 'Оценка';\n      case 'text': return 'Текст';\n      case 'boolean': return 'Да/Нет';\n      default: return type;\n    }\n  };\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case 'rating': return 'bg-blue-100 text-blue-800';\n      case 'text': return 'bg-green-100 text-green-800';\n      case 'boolean': return 'bg-purple-100 text-purple-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const filteredQuestions = selectedCategory ? \n    questions.filter(q => q.category_id === selectedCategory) : \n    questions;\n\n  const groupedQuestions = filteredQuestions.reduce((acc, question) => {\n    const categoryId = question.category_id;\n    if (!acc[categoryId]) {\n      acc[categoryId] = [];\n    }\n    acc[categoryId].push(question);\n    return acc;\n  }, {} as Record<number, Question[]>);\n\n  // Очистка сообщений через 5 секунд\n  useEffect(() => {\n    if (successMessage || error) {\n      const timer = setTimeout(() => {\n        setSuccessMessage(null);\n        setError(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [successMessage, error]);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Заголовок */}\n      <div className=\"md:flex md:items-center md:justify-between\">\n        <div className=\"flex-1 min-w-0\">\n          <h1 className=\"text-2xl font-bold leading-7 text-gray-900 dark:text-white sm:text-3xl sm:truncate\">\n            Управление вопросами\n          </h1>\n          <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n            Создавайте и управляйте вопросами для оценки по категориям\n          </p>\n        </div>\n        <div className=\"mt-4 flex md:mt-0 md:ml-4\">\n          <button\n            onClick={openCreateForm}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n          >\n            Добавить вопрос\n          </button>\n        </div>\n      </div>\n\n      {/* Сообщения */}\n      {successMessage && (\n        <div className=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded\">\n          {successMessage}\n        </div>\n      )}\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded\">\n          {error}\n        </div>\n      )}\n\n      {/* Фильтры */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-4\">\n        <div className=\"flex items-center space-x-4\">\n          <label htmlFor=\"category-filter\" className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n            Фильтр по категории:\n          </label>\n          <select\n            id=\"category-filter\"\n            value={selectedCategory || ''}\n            onChange={(e) => setSelectedCategory(e.target.value ? parseInt(e.target.value) : null)}\n            className=\"border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\"\n          >\n            <option value=\"\">Все категории</option>\n            {categories.map(category => (\n              <option key={category.id} value={category.id}>\n                {category.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Список вопросов по категориям */}\n      <div className=\"space-y-6\">\n        {Object.entries(groupedQuestions).map(([categoryId, categoryQuestions]) => {\n          const category = categories.find(c => c.id === parseInt(categoryId));\n          if (!category) return null;\n\n          return (\n            <div key={categoryId} className=\"bg-white dark:bg-gray-800 shadow rounded-lg\">\n              <div className=\"px-4 py-5 sm:px-6 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center\">\n                  <div \n                    className=\"flex-shrink-0 w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm mr-3\"\n                    style={{ backgroundColor: category.color }}\n                  >\n                    {category.icon}\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg leading-6 font-medium text-gray-900 dark:text-white\">\n                      {category.name}\n                    </h3>\n                    <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n                      {categoryQuestions.length} вопросов\n                    </p>\n                  </div>\n                </div>\n              </div>\n              \n              <ul className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                {categoryQuestions.map((question, index) => (\n                  <li key={question.id} className=\"px-4 py-4 sm:px-6\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center\">\n                          <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                            {question.text}\n                          </p>\n                          <span className={`ml-2 px-2 py-1 text-xs font-medium rounded-full ${getTypeColor(question.type)}`}>\n                            {getTypeText(question.type)}\n                          </span>\n                          {!question.is_active && (\n                            <span className=\"ml-2 px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\n                              Неактивен\n                            </span>\n                          )}\n                        </div>\n                        {question.description && (\n                          <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n                            {question.description}\n                          </p>\n                        )}\n                        {question.type === 'rating' && (\n                          <p className=\"mt-1 text-xs text-gray-400 dark:text-gray-500\">\n                            Диапазон: {question.min_value} - {question.max_value}\n                          </p>\n                        )}\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        {/* Кнопки изменения порядка */}\n                        <div className=\"flex flex-col space-y-1\">\n                          <button\n                            onClick={() => handleReorder(question.id, 'up')}\n                            disabled={index === 0}\n                            className={`p-1 rounded text-xs ${\n                              index === 0 \n                                ? 'text-gray-300 cursor-not-allowed' \n                                : 'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200'\n                            }`}\n                          >\n                            ↑\n                          </button>\n                          <button\n                            onClick={() => handleReorder(question.id, 'down')}\n                            disabled={index === categoryQuestions.length - 1}\n                            className={`p-1 rounded text-xs ${\n                              index === categoryQuestions.length - 1 \n                                ? 'text-gray-300 cursor-not-allowed' \n                                : 'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200'\n                            }`}\n                          >\n                            ↓\n                          </button>\n                        </div>\n                        \n                        <button\n                          onClick={() => openEditForm(question)}\n                          className=\"text-primary-600 hover:text-primary-900 dark:text-primary-400 dark:hover:text-primary-300\"\n                        >\n                          Редактировать\n                        </button>\n                        \n                        <button\n                          onClick={() => handleToggleActive(question.id)}\n                          className={`${\n                            question.is_active \n                              ? 'text-yellow-600 hover:text-yellow-900' \n                              : 'text-green-600 hover:text-green-900'\n                          }`}\n                        >\n                          {question.is_active ? 'Деактивировать' : 'Активировать'}\n                        </button>\n                        \n                        <button\n                          onClick={() => handleDeleteQuestion(question.id)}\n                          className=\"text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300\"\n                        >\n                          Удалить\n                        </button>\n                      </div>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Модальное окно для создания/редактирования */}\n      {(showCreateForm || showEditForm) && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 max-w-md w-full mx-4 max-h-[90vh] overflow-y-auto\">\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n              {showCreateForm ? 'Создать вопрос' : 'Редактировать вопрос'}\n            </h3>\n            \n            <form onSubmit={showCreateForm ? handleCreateQuestion : handleUpdateQuestion} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Текст вопроса *\n                </label>\n                <textarea\n                  value={formData.text}\n                  onChange={(e) => setFormData({...formData, text: e.target.value})}\n                  rows={3}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\"\n                  required\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Описание\n                </label>\n                <textarea\n                  value={formData.description}\n                  onChange={(e) => setFormData({...formData, description: e.target.value})}\n                  rows={2}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Категория *\n                </label>\n                <select\n                  value={formData.category_id}\n                  onChange={(e) => setFormData({...formData, category_id: parseInt(e.target.value)})}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\"\n                  required\n                >\n                  <option value=\"\">Выберите категорию</option>\n                  {categories.map(category => (\n                    <option key={category.id} value={category.id}>\n                      {category.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Тип вопроса *\n                </label>\n                <select\n                  value={formData.type}\n                  onChange={(e) => setFormData({...formData, type: e.target.value as 'rating' | 'text' | 'boolean'})}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\"\n                  required\n                >\n                  <option value=\"rating\">Оценка (шкала)</option>\n                  <option value=\"text\">Текстовый ответ</option>\n                  <option value=\"boolean\">Да/Нет</option>\n                </select>\n              </div>\n              \n              {formData.type === 'rating' && (\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                      Минимальное значение\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={formData.min_value}\n                      onChange={(e) => setFormData({...formData, min_value: parseInt(e.target.value)})}\n                      className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\"\n                      min=\"1\"\n                      max=\"10\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                      Максимальное значение\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={formData.max_value}\n                      onChange={(e) => setFormData({...formData, max_value: parseInt(e.target.value)})}\n                      className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\"\n                      min=\"1\"\n                      max=\"10\"\n                    />\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"flex items-center\">\n                <input\n                  id=\"is_active\"\n                  type=\"checkbox\"\n                  checked={formData.is_active}\n                  onChange={(e) => setFormData({...formData, is_active: e.target.checked})}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                />\n                <label htmlFor=\"is_active\" className=\"ml-2 block text-sm text-gray-900 dark:text-white\">\n                  Активен\n                </label>\n              </div>\n              \n              <div className=\"flex justify-end space-x-3 pt-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowCreateForm(false);\n                    setShowEditForm(false);\n                    setSelectedQuestion(null);\n                  }}\n                  className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n                >\n                  Отмена\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n                >\n                  {showCreateForm ? 'Создать' : 'Сохранить'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminQuestions; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}