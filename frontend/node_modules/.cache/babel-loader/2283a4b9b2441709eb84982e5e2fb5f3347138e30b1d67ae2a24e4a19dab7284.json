{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{authAPI}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(null);const[isLoading,setIsLoading]=useState(true);const navigate=useNavigate();const isAuthenticated=!!user&&!!token;useEffect(()=>{// Проверяем токен в localStorage при инициализации\nconst savedToken=localStorage.getItem('auth_token');if(savedToken){setToken(savedToken);loadUser(savedToken);}else{setIsLoading(false);}},[]);const loadUser=async authToken=>{try{const response=await authAPI.getCurrentUser(authToken);if(response.success&&response.data){setUser(response.data);}else{throw new Error(response.error||'Не удалось загрузить пользователя');}}catch(error){console.error('Load user error:',error);logout();}finally{setIsLoading(false);}};const login=async(email,password)=>{try{setIsLoading(true);const response=await authAPI.login(email,password);if(response.success&&response.data){const{token:authToken,user:userData}=response.data;setToken(authToken);setUser(userData);localStorage.setItem('auth_token',authToken);console.log('Добро пожаловать!');navigate('/dashboard');}else{throw new Error(response.error||'Ошибка авторизации');}}catch(error){console.error('Login error:',error);console.error(error.message||'Ошибка авторизации');throw error;}finally{setIsLoading(false);}};const register=async userData=>{try{setIsLoading(true);const response=await authAPI.register(userData);if(response.success){console.log('Регистрация успешна! Пароль отправлен в Mattermost.');navigate('/login');}else{throw new Error(response.error||'Ошибка регистрации');}}catch(error){console.error('Registration error:',error);console.error(error.message||'Ошибка регистрации');throw error;}finally{setIsLoading(false);}};const logout=()=>{setUser(null);setToken(null);localStorage.removeItem('auth_token');console.log('Вы вышли из системы');navigate('/login');};const value={user,token,login,logout,register,isLoading,isAuthenticated};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useNavigate","authAPI","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","token","setToken","isLoading","setIsLoading","navigate","isAuthenticated","savedToken","localStorage","getItem","loadUser","authToken","response","getCurrentUser","success","data","error","console","logout","login","email","password","userData","setItem","log","message","register","removeItem","value","Provider"],"sources":["/Users/chastnik/Documents/projects/360/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { authAPI } from '../services/api';\n\ninterface User {\n  id: string;\n  email: string;\n  first_name: string;\n  last_name: string;\n  middle_name?: string;\n  role: 'admin' | 'manager' | 'user';\n  position?: string;\n  department?: string;\n  manager_id?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n  register: (userData: RegisterData) => Promise<void>;\n  isLoading: boolean;\n  isAuthenticated: boolean;\n}\n\ninterface RegisterData {\n  email: string;\n  first_name: string;\n  last_name: string;\n  middle_name?: string;\n  mattermost_username?: string;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  const isAuthenticated = !!user && !!token;\n\n  useEffect(() => {\n    // Проверяем токен в localStorage при инициализации\n    const savedToken = localStorage.getItem('auth_token');\n    if (savedToken) {\n      setToken(savedToken);\n      loadUser(savedToken);\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const loadUser = async (authToken: string) => {\n    try {\n      const response = await authAPI.getCurrentUser(authToken);\n      if (response.success && response.data) {\n        setUser(response.data);\n      } else {\n        throw new Error(response.error || 'Не удалось загрузить пользователя');\n      }\n    } catch (error) {\n      console.error('Load user error:', error);\n      logout();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const login = async (email: string, password: string) => {\n    try {\n      setIsLoading(true);\n      const response = await authAPI.login(email, password);\n      \n      if (response.success && response.data) {\n        const { token: authToken, user: userData } = response.data;\n        setToken(authToken);\n        setUser(userData);\n        localStorage.setItem('auth_token', authToken);\n        \n        console.log('Добро пожаловать!');\n        navigate('/dashboard');\n      } else {\n        throw new Error(response.error || 'Ошибка авторизации');\n      }\n    } catch (error: any) {\n      console.error('Login error:', error);\n      console.error(error.message || 'Ошибка авторизации');\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const register = async (userData: RegisterData) => {\n    try {\n      setIsLoading(true);\n      const response = await authAPI.register(userData);\n      \n      if (response.success) {\n        console.log('Регистрация успешна! Пароль отправлен в Mattermost.');\n        navigate('/login');\n      } else {\n        throw new Error(response.error || 'Ошибка регистрации');\n      }\n    } catch (error: any) {\n      console.error('Registration error:', error);\n      console.error(error.message || 'Ошибка регистрации');\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('auth_token');\n    console.log('Вы вышли из системы');\n    navigate('/login');\n  };\n\n  const value = {\n    user,\n    token,\n    login,\n    logout,\n    register,\n    isLoading,\n    isAuthenticated,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}