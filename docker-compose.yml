version: "3.9"

services:
  database:
    image: postgres:15
    container_name: assessment360_database
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: assessment360_redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: assessment360_backend
    depends_on:
      - database
      - redis
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      FRONTEND_URL: ${FRONTEND_URL}
    ports:
      - "5000:5000"

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        # Во фронтенде API вызывается по относительному пути через nginx-прокси
        REACT_APP_API_URL: "/api"
    container_name: assessment360_frontend
    depends_on:
      - backend
    restart: unless-stopped
    ports:
      - "80:80"

volumes:
  postgres_data:
  redis_data:


